Один из самых полезных типов, встречающихся в любом приложении — System.
String, — представляет неизменяемый упорядоченный набор символов. Будучи
прямым потомком Object, он является ссылочным типом, по этой причине строки всегда размещаются в куче и никогда — в стеке потока.

String s = "Hi" + " " + "there.";
Поскольку все строки в этом коде литеральные, компилятор выполняет их конкатенацию на этапе компиляции, в результате в метаданных модуля оказывается лишь
строка "Hi there.". Конкатенация нелитеральных строк с помощью оператора +
	происходит на этапе выполнения.
	
Если выполняется много операций со строками, в куче
создается много объектов String — это заставляет чаще прибегать к помощи уборщика мусора, что отрицательно сказывается на производительности приложения.

string.Equals("1", "2", StringComparison.Ordinal);
string.Equals("1", "2", StringComparison.OrdinalIgnoreCase);

быстрее остальных проверяют на совпадение по байтикам на низком уровне.


FCL перед не зависящим от регистра сравнением строки нормализуют путем приведения их к верхнему регистру.
Лучше использовать ToUpperInvariant.

При порядковом сравнении (ordinal comparison) CLR быстро проверяет, равно ли количество символов в строках. 
При отрицательном результате строки точно не равны, но если длина одинакова, приходится сравнивать их символ за символом. 

При сравнении с учетом региональных стандартов среде CLR тоже приходится посимвольно сравнить строки, потому что две строки разной длины могут оказаться равными.
К тому же хранение в памяти нескольких экземпляров одной строки приводит к непроизводительным затратам памяти — ведь строки неизменяемы. 
Эффективного использования памяти можно добиться, если держать в ней одну строку, на которую будут указывать соответствующие ссылки.

При инициализации CLR создает внутреннюю хеш-таблицу, в которой ключами являются строки, а значениями — ссылки на строковые объекты в управляемой
куче. 
Вначале таблица, разумеется, пуста. В классе String есть два метода, предоставляющие доступ к внутренней хеш-таблице.

По умолчанию при загрузке сборки CLR интернирует все литеральные строки,
описанные в метаданных сборки.

